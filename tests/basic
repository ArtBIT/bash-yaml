#!/bin/bash

# Configure
set -e
script=$(readlink -f "$0")
cd "$(dirname "$script")"
source ../src/yaml
YAML_FILENAME=sample.yml

if which tput > /dev/null 2>&1 && [[ $(tput -T$TERM colors) -ge 8 ]]; then
    RED='\033[0;31m'
    GREEN='\033[0;32m'
    NC='\033[0m' # No Color
fi


# Define tests
function test_reading_values() {
    [ "$(cat $YAML_FILENAME | yaml_get_value author.name)" == "Djordje Ungar" ] &&
    [ "$(cat $YAML_FILENAME | yaml_get_value author.username)" == "artbit" ] &&
    [ "$(cat $YAML_FILENAME | yaml_get_value author.email)" == "artbit@email.com" ] &&
    return 0 || return 1
}
function test_dumbl() {
    dumbl=$(cat $YAML_FILENAME | yaml_to_dumbl)
    [ "$(echo "$dumbl" | grep '^author.name' )" == "author.name: Djordje Ungar" ] &&
    [ "$(echo "$dumbl" | grep '^author.username' )" == "author.username: artbit" ] &&
    [ "$(echo "$dumbl" | grep '^author.email' )" == "author.email: artbit@email.com" ] &&
    return 0 || return 1
}
function test_replacing_values() {
    replaced=$(cat $YAML_FILENAME | yaml_replace 'author.name' 'Anonymous' | yaml_replace 'author.email' 'someone@email.com')
    [ "$(echo "$replaced" | yaml_get_value author.name )" == "Anonymous" ] &&
    [ "$(echo "$replaced" | yaml_get_value author.username )" == "artbit" ] &&
    [ "$(echo "$replaced" | yaml_get_value author.email )" == "someone@email.com" ] &&
    return 0 || return 1
}

# Compile tests
test_names=($(cat "$script" | grep "^function test_" | sed "s/^function \(test_[^(]\+\).*/\1/g"))
test_command=
for test_name in ${test_names[@]}; do
    test_command="${test_command} && (${test_name} && echo -e '${GREEN}${test_name} ok! ${NC}' || echo -e '${RED}${test_name} failed! ${NC}')"
done
test_command=${test_command:4}

# Run tests
eval "$test_command" && echo -e "\n${GREEN}All tests are green! Hurray! ${NC}" && exit 0 || echo -e "\n${RED}Some tests have errors! ${NC}" && exit 1
